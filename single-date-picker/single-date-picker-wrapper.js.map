{"version":3,"sources":["../../src/single-date-picker/single-date-picker-wrapper.ts"],"names":[],"mappings":"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","file":"single-date-picker-wrapper.js","sourceRoot":"","sourcesContent":["import * as React from 'react';\nimport { SingleDatePicker } from 'react-dates';\nimport { SingleDatePickerComponent } from './single-date-picker.component';\nimport * as moment from 'moment';\n\nexport class SingleDatePickerWrapper extends React.Component<any, any> {\n\n  private ngComponent: SingleDatePickerComponent;\n\n  constructor(props: any) {\n    super(props);\n\n    // React component state\n    this.state = this.createState();\n\n    // Bindings to angular context\n    this.ngComponent = props.ngComponent;\n    this.ngComponent.updateReactDate = this.updateReactDateFromNg;\n\n    this.onDateChange = this.onDateChange.bind(this);\n    this.onFocusChange = this.onFocusChange.bind(this);\n    this.ngComponent.updateReactDate = this.ngComponent.updateReactDate.bind(this);\n  }\n\n  updateReactDateFromNg(date: any): void {\n    // Update date\n    let newDate: any = date ? moment(date) : null;\n    this.onDateChange(newDate);\n  }\n\n  onDateChange(date: any): void {\n    // Update this react component state\n    this.setState({ date });\n\n    // Update angular component container state\n    this.ngComponent.value = date ? date.toDate() : null;\n  }\n\n  onFocusChange({ focused }: any): void {\n    this.setState({ focused });\n  }\n\n  createState(): any {\n    return {\n      date: this.props.date ? moment(this.props.date) : null,\n      focused: (this.props.focused != null) ? this.props.focused : false\n    };\n  }\n\n  render(): any {\n    let conf: any = {\n      // Required\n      date: this.state.date,\n      onDateChange: this.onDateChange,\n      focused: this.state.focused,\n      onFocusChange: this.onFocusChange,\n\n      // Optional\n      id: this.props.id,\n      placeholder: this.props.placeholder,\n      disabled: this.props.disabled,\n      required: this.props.required,\n      screenReaderInputMessage: this.props.screenReaderInputMessage,\n      showClearDate: this.props.showClearDate,\n      customCloseIcon: this.props.customCloseIcon,\n\n      orientation: this.props.orientation,\n      anchorDirection: this.props.anchorDirection,\n      horizontalMargin: this.props.horizontalMargin,\n      withPortal: this.props.withPortal,\n      withFullScreenPortal: this.props.withFullScreenPortal,\n      initialVisibleMonth: this.props.initialVisibleMonth,\n      numberOfMonths: this.props.numberOfMonths,\n      keepOpenOnDateSelect: this.props.keepOpenOnDateSelect,\n      reopenPickerOnClearDate: this.props.reopenPickerOnClearDate,\n      renderCalendarInfo: this.props.renderCalendarInfo,\n\n      navPrev: this.props.navPrev,\n      navNext: this.props.navNext,\n      onPrevMonthClick: this.props.onPrevMonthClick,\n      onNextMonthClick: this.props.onNextMonthClick,\n\n      renderDay: this.props.renderDay,\n      enableOutsideDays: this.props.enableOutsideDays,\n      isDayBlocked: this.props.isDayBlocked,\n      isOutsideRange: this.props.isOutsideRange,\n      isDayHighlighted: this.props.isDayHighlighted,\n\n      displayFormat: this.props.displayFormat,\n      monthFormat: this.props.monthFormat,\n      phrases: this.props.phrases\n    };\n    return React.createElement(SingleDatePicker, conf);\n  }\n}\n"]}